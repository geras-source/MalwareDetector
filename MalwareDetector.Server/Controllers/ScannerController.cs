using MalwareDetector.Core.FileSavers;
using MalwareDetector.Core.Scanner;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace MalwareDetector.Server.Controllers
{
    /// <summary>
    /// Контроллер сканирования
    /// </summary>
    [ApiController]
    [Route("api/[controller]")]
    public class ScannerController : ControllerBase
    {
        private readonly IFileSaverServices _fileSaverServices;
        private readonly IScannerServices _scannerServices;

        public ScannerController(IFileSaverServices fileSaverServices, IScannerServices scannerServices)
        {
            _fileSaverServices = fileSaverServices;
            _scannerServices = scannerServices;
        }
        /// <summary>
        /// Получает отчет по индетификатору
        /// </summary>
        /// <param name="id">Индетификатор отчета сканирования</param>
        /// <returns>Отчет по сканированию</returns>
        [HttpGet("{id}")]
        public string GetAReport(string id)
        {
            return _scannerServices.GetReportScan(id);
        }
        /// <summary>
        /// Подготавливает файлы и отправляет их на сканирование
        /// </summary>
        /// <param name="formFiles">Файлы полученные с помощью http запроса</param>
        /// <param name="pathDirectoryScan">Путь сканируемого директория</param>
        /// <returns>Индетификатор отчета</returns>
        [HttpPost]
        public async Task<string> StartScanning([FromForm] List<IFormFile> formFiles, [FromForm] string pathDirectoryScan)
        {
            var id = Guid.NewGuid().ToString();
            var filesForm = await _fileSaverServices.SaveFiles(formFiles);
            _scannerServices.StartScan(id, pathDirectoryScan, filesForm);
            return id;
        }
    }
}